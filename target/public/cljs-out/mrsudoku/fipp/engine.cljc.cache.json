["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fipp.engine","~:imports",null,"~:requires",["^ ","~$s","~$clojure.string","^;","^;","~$deque","~$fipp.deque","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$serialize-node",["^ ","^7","~$fipp.engine/serialize-node","~:file","target/public/cljs-out/mrsudoku/fipp/engine.cljc","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",25,"~:meta",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",10,"^E",11,"^F",10,"^G",25],"~:tag","~$cljs.core/MultiFn"],"~$serialize",["^ ","~:protocol-inline",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",12,"^E",7,"^F",12,"^G",16,"~:arglists",["~#list",["~$quote",["^N",[["~$doc"]]]]]],"^7","~$fipp.engine/serialize","~:variadic",false,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",16,"~:method-params",["^N",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^E",1,"^D",12,"^F",12,"~:max-fixed-arity",1,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P"]]]]]],"~$annotate-rights",["^ ","^L",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",68,"^E",7,"^F",68,"^G",22,"^M",["^N",["^O",["^N",[["~$rf"]]]]],"~:doc","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"^7","~$fipp.engine/annotate-rights","^R",false,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",22,"^S",["^N",[["^Y"]]],"^T",null,"^U",["^N",[null,null]],"^E",1,"^D",68,"^F",68,"^V",1,"^W",true,"^M",["^N",["^O",["^N",[["^Y"]]]]],"^Z","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"~$update-right",["^ ","^L",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",89,"^E",7,"^F",89,"^G",19,"^M",["^N",["^O",["^N",[["^<","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^R",true,"^V",2,"^S",[["^N",["^<","~$f","^11"]]],"^M",["^N",[["^<","~$f","~$&","^11"]]],"^U",["^N",[null]]]],"^7","~$fipp.engine/update-right","^R",true,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",19,"^12",["^ ","^R",true,"^V",2,"^S",[["^N",["^<","~$f","^11"]]],"^M",["^N",[["^<","~$f","~$&","^11"]]],"^U",["^N",[null]]],"^S",[["^N",["^<","~$f","^11"]]],"^T",null,"^U",["^N",[null]],"^E",1,"^D",89,"^F",89,"^V",2,"^W",true,"^M",["^N",[["^<","~$f","~$&","^11"]]]],"~$annotate-begins",["^ ","^L",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",92,"^E",7,"^F",92,"^G",22,"^M",["^N",["^O",["^N",[[["^ ","~:keys",["~$width"],"~:as","~$options"]]]]]],"^Z","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"^7","~$fipp.engine/annotate-begins","^R",false,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",22,"^S",["^N",[["~$p__11004"]]],"^T",null,"^U",["^N",[null,null]],"^E",1,"^D",92,"^F",92,"^V",1,"^W",true,"^M",["^N",["^O",["^N",[[["^ ","^15",["^16"],"^17","^18"]]]]]],"^Z","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"~$format-nodes",["^ ","^L",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",164,"^E",7,"^F",164,"^G",19,"^M",["^N",["^O",["^N",[[["^ ","^15",["^16"],"^17","^18"]]]]]],"^Z","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"^7","~$fipp.engine/format-nodes","^R",false,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",19,"^S",["^N",[["~$p__11013"]]],"^T",null,"^U",["^N",[null,null]],"^E",1,"^D",164,"^F",164,"^V",1,"^W",true,"^M",["^N",["^O",["^N",[[["^ ","^15",["^16"],"^17","^18"]]]]]],"^Z","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"~$pprint-document",["^ ","^L",null,"^H",["^ ","^C","/users/nfs/Etu2/3521802/3I020/sudoku/target/public/cljs-out/mrsudoku/fipp/engine.cljc","^D",234,"^E",7,"^F",234,"^G",22,"^M",["^N",["^O",["^N",[["~$document","^18"]]]]]],"^7","~$fipp.engine/pprint-document","^R",false,"^C","target/public/cljs-out/mrsudoku/fipp/engine.cljc","^G",22,"^S",["^N",[["^1?","^18"]]],"^T",null,"^U",["^N",[null,null]],"^E",1,"^D",234,"^F",234,"^V",2,"^W",true,"^M",["^N",["^O",["^N",[["^1?","^18"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:nest","~:align","~:outdent","~:group","~:else","~:offset","~:default","~:terminate","~:too-far","~:width","~:op","~:node","~:begin","~:break","~:nodes","^D","~:right","~:escaped","~:position","~:pass","~:end","~:hierarchy","~:inline","~:text","~:span"]],"~:order",["^1Y","^1K","^1O","^1[","^1I","^1P","^1W","^1U","^20","^D","^1Z","^1L","^1R","^1H","^1Q","^1X","^1E","^1J","^1G","^1F","^1T","^1N","^1V","^1S","^1M"]],"^Z","See: Oleg Kiselyov, Simon Peyton-Jones, and Amr Sabry\n  Lazy v. Yield: Incremental, Linear Pretty-printing"]